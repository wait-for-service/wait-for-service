{
  "branches": [
    {
      "name": "main",
      "prerelease": false
    },
    {
      "name": "releases/+([0-9])?(\\.\\d+)(\\.\\d+|z|$)",
      "prerelease": false
    },
    {
      "name": "next",
      "prerelease": true
    },
    {
      "name": "next-major",
      "prerelease": true
    }
  ],
  "plugins": [
    [
      "semantic-release-replace-plugin",
      {
        "replacements": [
          {
            "files": [
              "wait_for_service/__init__.py"
            ],
            "from": "__version__ ?=.*",
            "to": "__version__ = \"${nextRelease.version}\"",
            "results": [
              {
                "file": "wait_for_service/__init__.py",
                "hasChanged": true,
                "numMatches": 1,
                "numReplacements": 1
              }
            ],
            "countMatches": true
          },
          {
            "files": [
              "pyproject.toml"
            ],
            "from": "version = \"[0-9]+.[0-9]+.[0-9]+\"",
            "to": "version = \"${nextRelease.version}\"",
            "results": [
              {
                "file": "pyproject.toml",
                "hasChanged": true,
                "numMatches": 1,
                "numReplacements": 1
              }
            ],
            "countMatches": true
          }
        ]
      }
    ],
    [
      "@semantic-release/commit-analyzer",
      {
        "preset": "conventionalcommits",
        "parserOpts": {
          "noteKeywords": [
            "BREAKING CHANGE",
            "BREAKING CHANGES",
            "BREAKING"
          ]
        }
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "parserOpts": {
          "noteKeywords": [
            "BREAKING CHANGE",
            "BREAKING CHANGES",
            "BREAKING"
          ]
        },
        "writerOpts": {
          "commitsSort": [
            "subject",
            "scope"
          ]
        }
      }
    ],
    [
      "@semantic-release/git",
      {
        "assets": [
          "pyproject.toml",
          "wait_for_service/__init__.py"
        ],
        "message": "chore(release): ${nextRelease.version}\n\n${nextRelease.notes}"
      }
    ],
    "@semantic-release/github",
    [
      "@semantic-release/exec",
      {
        "prepareCmd": "poetry build"
      }
    ]
  ]
}
